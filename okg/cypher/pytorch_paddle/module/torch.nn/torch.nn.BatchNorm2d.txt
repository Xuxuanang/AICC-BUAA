// 1.1 torch.nn.BatchNorm2d
// 	功能一致，参数不一致
merge (: framework {name: "PyTorch", version: "1.5.0"});
merge (: class {framework: "PyTorch", name: "torch"});
merge (: class {framework: "PyTorch", name: "nn"});
merge (: operator {framework: 'PyTorch', name: 'BatchNorm2d', full_name: 'torch.nn.BatchNorm2d'});
merge (: parameter {framework: "PyTorch", operator: "torch.nn.BatchNorm2d", parameter_order: 1, name: "num_features", dtype: "int"});
merge (: parameter {framework: "PyTorch", operator: "torch.nn.BatchNorm2d", parameter_order: 2, name: "eps", dtype: "float", default: "1e-05", optional: "True"});
merge (: parameter {framework: "PyTorch", operator: "torch.nn.BatchNorm2d", parameter_order: 3, name: "momentum", dtype: "float", default: "0.1", optional: "True"});
merge (: parameter {framework: "PyTorch", operator: "torch.nn.BatchNorm2d", parameter_order: 4, name: "affine", dtype: "bool", default: "True", optional: "True"});
merge (: parameter {framework: "PyTorch", operator: "torch.nn.BatchNorm2d", parameter_order: 5, name: "track_running_stats", dtype: "bool", default: "True", optional: "True"});
merge (: input {framework: 'PyTorch', operator: 'torch.nn.BatchNorm2d', input_order: 1, name: 'x'});


// 1.2 paddle.nn.BatchNorm2D
merge (: framework {name: "PaddlePaddle", version: "2.6.0"});
merge (: class {framework: "PaddlePaddle", name: "paddle"});
merge (: class {framework: "PaddlePaddle", name: "nn"});
merge (: operator {framework: 'PaddlePaddle', name: 'BatchNorm2D', full_name: 'paddle.nn.BatchNorm2D'});
merge (: parameter {framework: "PaddlePaddle", operator: "paddle.nn.BatchNorm2D", parameter_order: 1, name: "num_features", dtype: "int"});
merge (: parameter {framework: "PaddlePaddle", operator: "paddle.nn.BatchNorm2D", parameter_order: 2, name: "momentum", dtype: "float", default: "0.9", optional: "True"});
merge (: parameter {framework: "PaddlePaddle", operator: "paddle.nn.BatchNorm2D", parameter_order: 3, name: "epsilon", dtype: "float", default: "1e-5", optional: "True"});
merge (: parameter {framework: "PaddlePaddle", operator: "paddle.nn.BatchNorm2D", parameter_order: 4, name: "weight_attr", dtype: "ParamAttr|bool", default: "None", optional: "True"});
merge (: childParameter { framework: "PaddlePaddle", operator: "paddle.nn.BatchNorm2D", dtype_order: 1, parameter_order: 4, name: "weight_attr", dtype : "ParamAttr", optional: "True"});
merge (: childParameter { framework: "PaddlePaddle", operator: "paddle.nn.BatchNorm2D", dtype_order: 2, parameter_order: 4, name: "weight_attr", dtype : "bool", optional: "True"});
merge (: parameter {framework: "PaddlePaddle", operator: "paddle.nn.BatchNorm2D", parameter_order: 5, name: "bias_attr", dtype: 2, default: "None", optional: "True"});
merge (: childParameter { framework: "PaddlePaddle", operator: "paddle.nn.BatchNorm2D", dtype_order: 1, parameter_order: 5, name: "bias_attr", dtype : "ParamAttr", optional: "True"});
merge (: childParameter { framework: "PaddlePaddle", operator: "paddle.nn.BatchNorm2D", dtype_order: 2, parameter_order: 5, name: "bias_attr", dtype : "bool", optional: "True"});
merge (: parameter {framework: "PaddlePaddle", operator: "paddle.nn.BatchNorm2D", parameter_order: 6, name: "data_format",dtype: "str", default: "NCHW", optional: "True"});
merge (: parameter {framework: "PaddlePaddle", operator: "paddle.nn.BatchNorm2D", parameter_order: 7, name: "use_global_stats",dtype: 2, default: "None", optional: "True"});
merge (: childParameter { framework: "PaddlePaddle", operator: "paddle.nn.BatchNorm2D", dtype_order: 1, parameter_order: 7, name: "use_global_stats", dtype : "bool", optional: "True"});
merge (: childParameter { framework: "PaddlePaddle", operator: "paddle.nn.BatchNorm2D", dtype_order: 2, parameter_order: 7, name: "use_global_stats", dtype : "None", optional: "True"});
merge (: input {framework: 'PaddlePaddle', operator: 'paddle.nn.BatchNorm2D', input_order: 1, name: 'x'});



// 2. relationship within the framework
// 2.1 torch.nn.BatchNorm2d
match
	(m1: framework {name: 'PyTorch'}),
	(m2: class {framework: 'PyTorch', name: 'torch'}),
	(m3: class {framework: 'PyTorch', name: 'nn'}),
	(m4: operator {full_name: 'torch.nn.BatchNorm2d'})
merge (m1) -[: classOfFramework {name: m2.name}]-> (m2)
merge (m2) -[: subClassOfClass {name: m3.name}]-> (m3)
merge (m3) -[: operatorOfClass {name: m4.name}]-> (m4);

match
	(m21: operator {full_name: 'torch.nn.BatchNorm2d'}),
	(m22: parameter {framework: 'PyTorch', operator: 'torch.nn.BatchNorm2d'})
merge (m21) -[: parameterOfOperator {parameter_order: m22.parameter_order, name: m22.name}] -> (m22);

match
	(m21: parameter {framework: 'PyTorch', operator: 'torch.nn.BatchNorm2d'}),
	(m22: childParameter {framework: 'PyTorch', operator: 'torch.nn.BatchNorm2d'})
where m21.name = m22.name
merge (m21) -[: oneOf {dtype_order: m22.dtype_order, dtype: m22.dtype}] -> (m22);

match
	(m21: operator {full_name: 'torch.nn.BatchNorm2d'}),
	(m22: input {framework: 'PyTorch', operator: 'torch.nn.BatchNorm2d'})
merge (m21) -[: inputOfOperator {input_order: m22.input_order, name: m22.name}] -> (m22);


// 2.2 paddle.nn.BatchNorm2D
match
	(m1: framework {name: 'PaddlePaddle'}),
	(m2: class {framework: 'PaddlePaddle', name: 'paddle'}),
	(m3: class {framework: 'PaddlePaddle', name: 'nn'}),
	(m4: operator {full_name: 'paddle.nn.BatchNorm2D'})
merge (m1) -[: classOfFramework {name: m2.name}]-> (m2)
merge (m2) -[: subClassOfClass {name: m3.name}]-> (m3)
merge (m3) -[: operatorOfClass {name: m4.name}]-> (m4);

match
	(m21: operator {full_name: 'paddle.nn.BatchNorm2D'}),
	(m22: parameter {framework: 'PaddlePaddle', operator: 'paddle.nn.BatchNorm2D'})
merge (m21) -[: parameterOfOperator {parameter_order: m22.parameter_order, name: m22.name}] -> (m22);

match
	(m21: parameter {framework: 'PaddlePaddle', operator: 'paddle.nn.BatchNorm2D'}),
	(m22: childParameter {framework: 'PaddlePaddle', operator: 'paddle.nn.BatchNorm2D'})
where m21.name = m22.name
merge (m21) -[: oneOf {dtype_order: m22.dtype_order, dtype: m22.dtype}] -> (m22);

match
	(m21: operator {full_name: 'paddle.nn.BatchNorm2D'}),
	(m22: input {framework: 'PaddlePaddle', operator: 'paddle.nn.BatchNorm2D'})
merge (m21) -[: inputOfOperator {input_order: m22.input_order, name: m22.name}] -> (m22);



// 3. relationship between frameworks
match
	(m31: operator {full_name: 'torch.nn.BatchNorm2d'}),
	(m32: operator {full_name: 'paddle.nn.BatchNorm2D'})
merge (m31) -[: equivalentOperator {framework_name: 'PaddlePaddle'}]-> (m32)
merge (m32) -[: equivalentOperator {framework_name: 'PyTorch'}]-> (m31);

match
	(m31: parameter {framework: 'PyTorch', operator: "torch.nn.BatchNorm2d", parameter_order: 1}),
	(m32: parameter {framework: 'PaddlePaddle', operator: "paddle.nn.BatchNorm2D", parameter_order: 1})
merge (m31) -[: equivalentParameter {framework_name: 'PaddlePaddle'}]-> (m32)
merge (m32) -[: equivalentParameter {framework_name: 'PyTorch'}]-> (m31);

match
	(m31: parameter {framework: 'PyTorch', operator: "torch.nn.BatchNorm2d", parameter_order: 2}),
	(m32: parameter {framework: 'PaddlePaddle', operator: "paddle.nn.BatchNorm2D", parameter_order: 3})
merge (m31) -[: equivalentParameter {framework_name: 'PaddlePaddle'}]-> (m32)
merge (m32) -[: equivalentParameter {framework_name: 'PyTorch'}]-> (m31);

match
	(m31: parameter {framework: 'PyTorch', operator: "torch.nn.BatchNorm2d", parameter_order: 3}),
	(m32: parameter {framework: 'PaddlePaddle', operator: "paddle.nn.BatchNorm2D", parameter_order: 2})
merge (m31) -[: equivalentParameter {framework_name: 'PaddlePaddle'}]-> (m32)
merge (m32) -[: equivalentParameter {framework_name: 'PyTorch'}]-> (m31);

match
	(m31: parameter {framework: 'PyTorch', operator: "torch.nn.BatchNorm2d", parameter_order: 5}),
	(m32: parameter {framework: 'PaddlePaddle', operator: "paddle.nn.BatchNorm2D", parameter_order: 7})
merge (m31) -[: equivalentParameter {framework_name: 'PaddlePaddle'}]-> (m32)
merge (m32) -[: equivalentParameter {framework_name: 'PyTorch'}]-> (m31);

match
	(m31: input {framework: 'PyTorch', operator: "torch.nn.BatchNorm2d", input_order: 1}),
	(m32: input {framework: 'PaddlePaddle', operator: "paddle.nn.BatchNorm2D", input_order: 1})
merge (m31) -[: equivalentParameter {framework_name: 'PaddlePaddle'}]-> (m32)
merge (m32) -[: equivalentParameter {framework_name: 'PyTorch'}]-> (m31);