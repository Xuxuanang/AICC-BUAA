// 1.1 torch.nn.Conv2d
// 功能一致，参数不一致
merge (: framework {name: 'PyTorch', version: '1.5.0'});
merge (: class {framework: 'PyTorch', name: 'torch'});
merge (: class {framework: 'PyTorch', name: 'nn'});
merge (: operator {framework: 'PyTorch', name: 'Conv2d', full_name: 'torch.nn.Conv2d'});
merge (: parameter {framework: 'PyTorch', operator: 'torch.nn.Conv2d', parameter_order: 1, name: 'in_channels', dtype: 'int'});
merge (: parameter {framework: 'PyTorch', operator: 'torch.nn.Conv2d', parameter_order: 2, name: 'out_channels', dtype: 'int'});
merge (: parameter {framework: 'PyTorch', operator: 'torch.nn.Conv2d', parameter_order: 3, name: 'kernel_size', dtype: 2});
merge (: childParameter {framework: 'PyTorch', operator: 'torch.nn.Conv2d', dtype_order: 1, parameter_order: 3, name: 'kernel_size', dtype : 'int'});
merge (: childParameter {framework: 'PyTorch', operator: 'torch.nn.Conv2d', dtype_order: 2, parameter_order: 3, name: 'kernel_size', dtype : 'tuple'});
merge (: parameter {framework: 'PyTorch', operator: 'torch.nn.Conv2d', parameter_order: 4, name: 'stride', dtype: 2, default: 1, optional: 'True'});
merge (: childParameter {framework: 'PyTorch', operator: 'torch.nn.Conv2d', dtype_order: 1, parameter_order: 4, name: 'stride', dtype: 'int', default: 1, optional: 'True'});
merge (: childParameter {framework: 'PyTorch', operator: 'torch.nn.Conv2d', dtype_order: 2, parameter_order: 4, name: 'stride', dtype: 'tuple', default: 'Null', optional: 'True'});
merge (: parameter {framework: 'PyTorch', operator: 'torch.nn.Conv2d', parameter_order: 5, name: 'padding', dtype: 2, default: 0, optional: 'True'});
merge (: childParameter {framework: 'PyTorch', operator: 'torch.nn.Conv2d', dtype_order: 1, parameter_order: 5, name: 'padding', dtype: 'int', optional: 'True'});
merge (: childParameter {framework: 'PyTorch', operator: 'torch.nn.Conv2d', dtype_order: 2, parameter_order: 5, name: 'padding', dtype: 'tuple', optional: 'True'});
merge (: childParameter {framework: 'PyTorch', operator: 'torch.nn.Conv2d', dtype_order: 3, parameter_order: 5, name: 'padding', dtype: 'str', optional: 'True'});
merge (: parameter {framework: 'PyTorch', operator: 'torch.nn.Conv2d', parameter_order: 6, name: 'dilation', dtype: 2, default: 1, optional: 'true'});
merge (: childParameter {framework: 'PyTorch', operator: 'torch.nn.Conv2d', dtype_order: 1, parameter_order: 6, name: 'dilation', dtype: 'int', optional: 'True'});
merge (: childParameter {framework: 'PyTorch', operator: 'torch.nn.Conv2d', dtype_order: 2, parameter_order: 6, name: 'dilation', dtype: 'tuple', optional: 'True'});
merge (: parameter {framework: 'PyTorch', operator: 'torch.nn.Conv2d', parameter_order: 7, name: 'groups', dtype: 'int', default: 1, optional: 'True'});
merge (: parameter {framework: 'PyTorch', operator: 'torch.nn.Conv2d', parameter_order: 8, name: 'bias', dtype: 'bool', default: 'True', optional: 'True'});
merge (: parameter {framework: 'PyTorch', operator: 'torch.nn.Conv2d', parameter_order: 9, name: 'padding_mode', dtype: 'str', default: 'zeros', optional: 'True'});
merge (: input {framework: 'PyTorch', operator: 'torch.nn.Conv2d', input_order: 1, name: 'x'});


// 1.2 paddle.nn.Conv2D
merge (: framework {name: 'PaddlePaddle', version: '2.6.0'});
merge (: class {framework: 'PaddlePaddle', name: 'paddle'});
merge (: class {framework: 'PaddlePaddle', name: 'nn'});
merge (: operator {framework: 'PaddlePaddle', name: 'Conv2D', full_name: 'paddle.nn.Conv2D'});
merge (: parameter {framework: 'PaddlePaddle', operator: 'paddle.nn.Conv2D', parameter_order: 1, name: 'in_channels', dtype: 'int'});
merge (: parameter {framework: 'PaddlePaddle', operator: 'paddle.nn.Conv2D', parameter_order: 2, name: 'out_channels', dtype: 'int'});
merge (: parameter {framework: 'PaddlePaddle', operator: 'paddle.nn.Conv2D', parameter_order: 3, name: 'kernel_size', dtype: 3});
merge (: childParameter {framework: 'PaddlePaddle', operator: 'paddle.nn.Conv2D', dtype_order: 1, parameter_order: 3, name: 'kernel_size', dtype: 'int'});
merge (: childParameter {framework: 'PaddlePaddle', operator: 'paddle.nn.Conv2D', dtype_order: 2, parameter_order: 3, name: 'kernel_size', dtype: 'list'});
merge (: childParameter {framework: 'PaddlePaddle', operator: 'paddle.nn.Conv2D', dtype_order: 3, parameter_order: 3, name: 'kernel_size', dtype: 'tuple'});
merge (: parameter {framework: 'PaddlePaddle', operator: 'paddle.nn.Conv2D', parameter_order: 4, name: 'stride', dtype: 3, default: 1});
merge (: childParameter {framework: 'PaddlePaddle', operator: 'paddle.nn.Conv2D', dtype_order: 1, parameter_order: 4, name: 'stride', dtype: 'int'});
merge (: childParameter {framework: 'PaddlePaddle', operator: 'paddle.nn.Conv2D', dtype_order: 2, parameter_order: 4, name: 'stride', dtype: 'list'});
merge (: childParameter {framework: 'PaddlePaddle', operator: 'paddle.nn.Conv2D', dtype_order: 3, parameter_order: 4, name: 'stride', dtype: 'tuple'});
merge (: parameter {framework: 'PaddlePaddle', operator: 'paddle.nn.Conv2D', parameter_order: 5, name: 'padding', dtype: 4, default: 0});
merge (: childParameter {framework: 'PaddlePaddle', operator: 'paddle.nn.Conv2D', dtype_order: 1, parameter_order: 5, name: 'padding', dtype: 'int'});
merge (: childParameter {framework: 'PaddlePaddle', operator: 'paddle.nn.Conv2D', dtype_order: 2, parameter_order: 5, name: 'padding', dtype: 'list'});
merge (: childParameter {framework: 'PaddlePaddle', operator: 'paddle.nn.Conv2D', dtype_order: 3, parameter_order: 5, name: 'padding', dtype: 'tuple'});
merge (: childParameter {framework: 'PaddlePaddle', operator: 'paddle.nn.Conv2D', dtype_order: 4, parameter_order: 5, name: 'padding', dtype: 'str'});
merge (: parameter {framework: 'PaddlePaddle', operator: 'paddle.nn.Conv2D', parameter_order: 6, name: 'dilation', dtype: 2, default: 1});
merge (: childParameter {framework: 'PaddlePaddle', operator: 'paddle.nn.Conv2D', dtype_order: 1, parameter_order: 6, name: 'dilation', dtype: 'int'});
merge (: childParameter {framework: 'PaddlePaddle', operator: 'paddle.nn.Conv2D', dtype_order: 2, parameter_order: 6, name: 'dilation', dtype: 'list'});
merge (: childParameter {framework: 'PaddlePaddle', operator: 'paddle.nn.Conv2D', dtype_order: 3, parameter_order: 6, name: 'dilation', dtype: 'tuple'});
merge (: parameter {framework: 'PaddlePaddle', operator: 'paddle.nn.Conv2D', parameter_order: 7, name: 'groups', dtype: 'int', default: 1});
merge (: parameter {framework: 'PaddlePaddle', operator: 'paddle.nn.Conv2D', parameter_order: 8, name: 'padding_mode', dtype : 'str', default : 'zeros'});
merge (: parameter {framework: "PaddlePaddle", operator: "paddle.nn.Conv2D", parameter_order: 9, name: "weight_attr", dtype: "ParamAttr", default: "None", optional: "True"});
merge (: parameter {framework: "PaddlePaddle", operator: "paddle.nn.Conv2D", parameter_order: 10, name: "bias_attr", dtype: 2, default: "None", optional: "True"});
merge (: childParameter { framework: "PaddlePaddle", operator: "paddle.nn.Conv2D", dtype_order: 1, parameter_order: 10, name: "bias_attr", dtype : "ParamAttr", optional: "True"});
merge (: childParameter { framework: "PaddlePaddle", operator: "paddle.nn.Conv2D", dtype_order: 2, parameter_order: 10, name: "bias_attr", dtype : "bool", optional: "True"});
merge (: parameter {framework: 'PaddlePaddle', operator: 'paddle.nn.Conv2D', parameter_order: 11, name: 'data_format', dtype: 'str', default: 'NCHW'});
merge (: input {framework: 'PaddlePaddle', operator: 'paddle.nn.Conv2D', input_order: 1, name: 'x'});



// 2. relationship within the framework
// 2.1 torch.nn.Conv2d
match
	(m1: framework {name: 'PyTorch'}),
	(m2: class {framework: 'PyTorch', name: 'torch'}),
	(m3: class {framework: 'PyTorch', name: 'nn'}),
	(m4: operator {full_name: 'torch.nn.Conv2d'})
merge (m1) -[: classOfFramework {name: m2.name}]-> (m2)
merge (m2) -[: subClassOfClass {name: m3.name}]-> (m3)
merge (m3) -[: operatorOfClass {name: m4.name}]-> (m4);

match
	(m21: operator {full_name: 'torch.nn.Conv2d'}),
	(m22: parameter {framework: 'PyTorch', operator: 'torch.nn.Conv2d'})
merge (m21) -[: parameterOfOperator {parameter_order: m22.parameter_order, name: m22.name}] -> (m22);

match
	(m21: parameter {framework: 'PyTorch', operator: 'torch.nn.Conv2d'}),
	(m22: childParameter {framework: 'PyTorch', operator: 'torch.nn.Conv2d'})
where m21.name = m22.name
merge (m21) -[: oneOf {dtype_order: m22.dtype_order, dtype: m22.dtype}] -> (m22);

match
	(m21: operator {full_name: 'torch.nn.Conv2d'}),
	(m22: input {framework: 'PyTorch', operator: 'torch.nn.Conv2d'})
merge (m21) -[: inputOfOperator {input_order: m22.input_order, name: m22.name}] -> (m22);


// 2.2 paddle.nn.Conv2D
match
	(m1: framework {name: 'PaddlePaddle'}),
	(m2: class {framework: 'PaddlePaddle', name: 'paddle'}),
	(m3: class {framework: 'PaddlePaddle', name: 'nn'}),
	(m4: operator {full_name: 'paddle.nn.Conv2D'})
merge (m1) -[: classOfFramework {name: m2.name}]-> (m2)
merge (m2) -[: subClassOfClass {name: m3.name}]-> (m3)
merge (m3) -[: operatorOfClass {name: m4.name}]-> (m4);

match
	(m21: operator {full_name: 'paddle.nn.Conv2D'}),
	(m22: parameter {framework: 'PaddlePaddle', operator: 'paddle.nn.Conv2D'})
merge (m21) -[: parameterOfOperator {parameter_order: m22.parameter_order, name: m22.name}] -> (m22);

match
	(m21: parameter {framework: 'PaddlePaddle', operator: 'paddle.nn.Conv2D'}),
	(m22: childParameter {framework: 'PaddlePaddle', operator: 'paddle.nn.Conv2D'})
where m21.name = m22.name
merge (m21) -[: oneOf {dtype_order: m22.dtype_order, dtype: m22.dtype}] -> (m22);

match
	(m21: operator {full_name: 'paddle.nn.Conv2D'}),
	(m22: input {framework: 'PaddlePaddle', operator: 'paddle.nn.Conv2D'})
merge (m21) -[: inputOfOperator {input_order: m22.input_order, name: m22.name}] -> (m22);



// 3. relationship between frameworks
match
	(m31: operator {full_name: 'torch.nn.Conv2d'}),
	(m32: operator {full_name: 'paddle.nn.Conv2D'})
merge (m31) -[: equivalentOperator {framework_name: 'PaddlePaddle'}]-> (m32)
merge (m32) -[: equivalentOperator {framework_name: 'PyTorch'}]-> (m31);

match
	(m31: parameter {framework: 'PyTorch', operator: "torch.nn.Conv2d", parameter_order: 1}),
	(m32: parameter {framework: 'PaddlePaddle', operator: "paddle.nn.Conv2D", parameter_order: 1})
merge (m31) -[: equivalentParameter {framework_name: 'PaddlePaddle'}]-> (m32)
merge (m32) -[: equivalentParameter {framework_name: 'PyTorch'}]-> (m31);

match
	(m31: parameter {framework: 'PyTorch', operator: "torch.nn.Conv2d", parameter_order: 2}),
	(m32: parameter {framework: 'PaddlePaddle', operator: "paddle.nn.Conv2D", parameter_order: 2})
merge (m31) -[: equivalentParameter {framework_name: 'PaddlePaddle'}]-> (m32)
merge (m32) -[: equivalentParameter {framework_name: 'PyTorch'}]-> (m31);

match
	(m31: parameter {framework: 'PyTorch', operator: "torch.nn.Conv2d", parameter_order: 3}),
	(m32: parameter {framework: 'PaddlePaddle', operator: "paddle.nn.Conv2D", parameter_order: 3})
merge (m31) -[: equivalentParameter {framework_name: 'PaddlePaddle'}]-> (m32)
merge (m32) -[: equivalentParameter {framework_name: 'PyTorch'}]-> (m31);

match
	(m31: parameter {framework: 'PyTorch', operator: "torch.nn.Conv2d", parameter_order: 4}),
	(m32: parameter {framework: 'PaddlePaddle', operator: "paddle.nn.Conv2D", parameter_order: 4})
merge (m31) -[: equivalentParameter {framework_name: 'PaddlePaddle'}]-> (m32)
merge (m32) -[: equivalentParameter {framework_name: 'PyTorch'}]-> (m31);

match
	(m31: parameter {framework: 'PyTorch', operator: "torch.nn.Conv2d", parameter_order: 5}),
	(m32: parameter {framework: 'PaddlePaddle', operator: "paddle.nn.Conv2D", parameter_order: 5})
merge (m31) -[: equivalentParameter {framework_name: 'PaddlePaddle'}]-> (m32)
merge (m32) -[: equivalentParameter {framework_name: 'PyTorch'}]-> (m31);

match
	(m31: parameter {framework: 'PyTorch', operator: "torch.nn.Conv2d", parameter_order: 6}),
	(m32: parameter {framework: 'PaddlePaddle', operator: "paddle.nn.Conv2D", parameter_order: 6})
merge (m31) -[: equivalentParameter {framework_name: 'PaddlePaddle'}]-> (m32)
merge (m32) -[: equivalentParameter {framework_name: 'PyTorch'}]-> (m31);

match
	(m31: parameter {framework: 'PyTorch', operator: "torch.nn.Conv2d", parameter_order: 7}),
	(m32: parameter {framework: 'PaddlePaddle', operator: "paddle.nn.Conv2D", parameter_order: 7})
merge (m31) -[: equivalentParameter {framework_name: 'PaddlePaddle'}]-> (m32)
merge (m32) -[: equivalentParameter {framework_name: 'PyTorch'}]-> (m31);

match
	(m31: parameter {framework: 'PyTorch', operator: "torch.nn.Conv2d", parameter_order: 9}),
	(m32: parameter {framework: 'PaddlePaddle', operator: "paddle.nn.Conv2D", parameter_order: 8})
merge (m31) -[: equivalentParameter {framework_name: 'PaddlePaddle'}]-> (m32)
merge (m32) -[: equivalentParameter {framework_name: 'PyTorch'}]-> (m31);

match
	(m31: input {framework: 'PyTorch', operator: "torch.nn.AdaptiveAvgPool2d", input_order: 1}),
	(m32: input {framework: 'PaddlePaddle', operator: "paddle.nn.AdaptiveAvgPool2D", input_order: 1})
merge (m31) -[: equivalentParameter {framework_name: 'PaddlePaddle'}]-> (m32)
merge (m32) -[: equivalentParameter {framework_name: 'PyTorch'}]-> (m31);