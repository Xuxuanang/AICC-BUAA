// 1.1 torch.nn.functional.relu
// 线性修正单元激活函数（Rectified Linear Unit）。
// 功能一致，torch 参数更多
merge (: framework {name: 'PyTorch', version: '1.5.0'});
merge (: class {framework: 'PyTorch', name: 'torch'});
merge (: class {framework: 'PyTorch', name: 'nn'});
merge (: class {framework: 'PyTorch', name: 'functional'});
merge (: operator {framework: 'PyTorch', name: 'relu', full_name: 'torch.nn.functional.relu'});
merge (: parameter {framework: 'PyTorch', operator: 'torch.nn.functional.relu', parameter_order: 1, name: 'input'});
merge (: parameter {framework: 'PyTorch', operator: 'torch.nn.functional.relu', parameter_order: 2, name: 'inplace', default: 'False'});


// 1.2 paddle.nn.functional.relu
merge (: framework {name: 'PaddlePaddle', version: '1.5.0'});
merge (: class {framework: 'PaddlePaddle', name: 'paddle'});
merge (: class {framework: 'PaddlePaddle', name: 'nn'});
merge (: class {framework: 'PaddlePaddle', name: 'functional'});
merge (: operator {framework: 'PaddlePaddle', name: 'relu', full_name: 'paddle.nn.functional.relu'});
merge (: parameter {framework: 'PaddlePaddle', operator: 'paddle.nn.functional.relu', parameter_order: 1, name: 'x'});



// 2. relationship within the framework
// 2.1 torch.nn.functional.relu
match
	(m1: framework {name: 'PyTorch'}),
	(m2: class {framework: 'PyTorch', name: 'torch'}),
	(m3: class {framework: 'PyTorch', name: 'nn'}),
	(m4: class {framework: 'PyTorch', name: 'functional'}),
	(m5: operator {full_name: 'torch.nn.functional.relu'})
merge (m1) -[: classOfFramework {name: m2.name}]-> (m2)
merge (m2) -[: subClassOfClass {name: m3.name}]-> (m3)
merge (m3) -[: subClassOfClass {name: m4.name}]-> (m4)
merge (m4) -[: operatorOfClass {name: m5.name}]-> (m5);

match
	(m21: operator {full_name: 'torch.nn.functional.relu'}),
	(m22: parameter {framework: 'PyTorch', operator: 'torch.nn.functional.relu'})
merge (m21) -[: parameterOfOperator {parameter_order: m22.parameter_order, name: m22.name}] -> (m22);

match
	(m21: parameter {framework: 'PyTorch', operator: 'torch.nn.functional.relu'}),
	(m22: childParameter {framework: 'PyTorch', operator: 'torch.nn.functional.relu'})
where m21.name = m22.name
merge (m21) -[: oneOf {dtype_order: m22.dtype_order, dtype: m22.dtype}] -> (m22);


// 2.2 paddle.nn.functional.relu
match
	(m1: framework {name: 'PaddlePaddle'}),
	(m2: class {framework: 'PaddlePaddle', name: 'paddle'}),
	(m3: class {framework: 'PaddlePaddle', name: 'nn'}),
	(m4: class {framework: 'PaddlePaddle', name: 'functional'}),
	(m5: operator {full_name: 'paddle.nn.functional.relu'})
merge (m1) -[: classOfFramework {name: m2.name}]-> (m2)
merge (m2) -[: subClassOfClass {name: m3.name}]-> (m3)
merge (m3) -[: subClassOfClass {name: m4.name}]-> (m4)
merge (m4) -[: operatorOfClass {name: m5.name}]-> (m5);

match
	(m21: operator {full_name: 'paddle.nn.functional.relu'}),
	(m22: parameter {framework: 'PaddlePaddle', operator: 'paddle.nn.functional.relu'})
merge (m21) -[: parameterOfOperator {parameter_order: m22.parameter_order, name: m22.name}] -> (m22);

match
	(m21: parameter {framework: 'PaddlePaddle', operator: 'paddle.nn.functional.relu'}),
	(m22: childParameter {framework: 'PaddlePaddle', operator: 'paddle.nn.functional.relu'})
where m21.name = m22.name
merge (m21) -[: oneOf {dtype_order: m22.dtype_order, dtype: m22.dtype}] -> (m22);

match
	(m21: operator {full_name: 'paddle.nn.functional.relu'}),
	(m22: input {framework: 'PaddlePaddle', operator: 'paddle.nn.functional.relu'})
merge (m21) -[: inputOfOperator {input_order: m22.input_order, name: m22.name}] -> (m22);



// 3. relationship between frameworks
match
	(m31: operator {full_name: 'torch.nn.functional.relu'}),
	(m32: operator {full_name: 'paddle.nn.functional.relu'})
merge (m31) -[: equivalentOperator {framework_name: 'PaddlePaddle'}]-> (m32)
merge (m32) -[: equivalentOperator {framework_name: 'PyTorch'}]-> (m31);

match
	(m31: parameter {framework: 'PyTorch', operator: "torch.nn.functional.relu", parameter_order: 1}),
	(m32: parameter {framework: 'PaddlePaddle', operator: "paddle.nn.functional.relu", parameter_order: 1})
merge (m31) -[: equivalentParameter {framework_name: 'PaddlePaddle'}]-> (m32)
merge (m32) -[: equivalentParameter {framework_name: 'PyTorch'}]-> (m31);